컴퓨터 구조학 문제 답안

**객 01** 답: ③
해설: 제어 버스는 양방향이 아니라 주로 단방향 신호 선들의 집합입니다. CPU에서 각 요소로 제어 신호를 보내는 것이 주된 역할입니다.

**객 02** 답: ③ AMD Ryzen 9
해설: AMD Ryzen 9는 x86-64 아키텍처 기반 프로세서이며, Arm 프로세서가 아닙니다. 나머지는 모두 Arm 아키텍처 기반입니다.

**객 03** 답: ②
해설: Arm Holdings는 CPU를 직접 생산하지 않고, IP(지적재산권)를 라이선스 형태로 제공하는 것이 주 사업 모델입니다.

**객 04** 답: ④
해설: nMOS는 보통 전류 소모가 크고 동작 속도가 느리다는 설명이 틀렸습니다. nMOS는 상대적으로 빠른 스위칭 속도를 가집니다.

**주 05** 답: 트랜지스터(Transistor)
해설: 트랜지스터는 디지털 회로의 기본 소자로, 0과 1을 전기적으로 구분하여 표현하고 논리 연산을 수행합니다.

**객 06** 답: ③
해설: N형 트랜지스터(N1)는 입력이 1일 때 ON이 되며, OFF가 되지 않습니다. 입력이 0일 때 OFF가 됩니다.

**주 07** 답: 무어의 법칙
해설: 무어의 법칙은 인텔의 공동 창립자 고든 무어가 제시한 법칙으로, "반도체 집적회로의 성능이 24개월마다 2배로 향상된다"는 것입니다. 즉, 같은 면적의 반도체에 집적되는 트랜지스터의 수가 18-24개월마다 2배씩 증가한다는 경험적 법칙입니다.

**주 08** 답: D1AF₁₆ → 8진수 변환
D1AF₁₆ = 53679₁₀
53679₁₀ → 8진수: 151257₈

**주 09** 답:
2진수: 1010100111011010.1010111
8진수: 124732.536₈
16진수: A9DA.5C₁₆

**주 10** 답:
A. kilo(K) - ② 10³
B. giga(G) - ③ 10⁹  
C. tera(T) - ① 10¹²

**주 11** 답: GiB = 2³⁰ 바이트
해설: IEC 단위에서 GiB(기비바이트)는 2³⁰ = 1,073,741,824 바이트입니다.

**주 12** 답: 31개의 주소선
해설: 2GiB = 2³¹ 바이트이므로, 2³¹개의 서로 다른 주소를 표현하려면 31개의 주소선이 필요합니다.

**주 13** 답: 컴파일러(Compiler)
해설: 컴파일러는 고급 언어로 작성된 전체 소스 코드를 기계어로 번역하는 도구입니다.

**주 14** 답: 인터프리터(Interpreter)
해설: 인터프리터는 고급 언어를 한 줄씩 읽어서 해석하고 실행하는 도구입니다.

**객 15** 답: ③ 어셈블리어
해설: 어셈블리어는 저급 언어에 해당합니다. Python, Java, C++는 모두 고급 언어입니다.

**객 16** 답: ③
해설: 저급 언어는 컴퓨터가 직접 해석하고 실행 가능한 명령어로 구성된 언어입니다. 기계어와 어셈블리어가 여기에 속합니다.

**객 17** 답: ②
해설: 인터프리터 언어는 코드 전체를 먼저 컴파일하지 않고, 한 줄씩 번역하여 실행합니다.

**주 18** 답: 크로스 컴파일러(Cross Compiler)
해설: 크로스 컴파일러는 실행되는 플랫폼과 다른 플랫폼에서 실행 가능한 코드를 생성하는 컴파일러입니다.

**주 19** 답:
CISC (Complex Instruction Set Computer):
- 정의: 복잡한 명령어 집합을 가진 컴퓨터 구조
- 장점: 복잡한 작업을 적은 명령어로 수행 가능, 메모리 사용량 절약
- 단점: 명령어 해석이 복잡, 파이프라인 구현 어려움

RISC (Reduced Instruction Set Computer):
- 정의: 단순한 명령어 집합을 가진 컴퓨터 구조
- 장점: 빠른 실행 속도, 파이프라인 구현 용이, 저전력
- 단점: 복잡한 작업에 더 많은 명령어 필요, 프로그램 크기 증가 가능

**객 21** 답: ③
해설: 멀티코어 시스템은 하나의 CPU 칩 안에 여러 개의 코어를 포함하여 동시에 여러 작업을 수행할 수 있는 시스템입니다.

**객 22** 답: ②
해설: Single-cycle CPU는 모든 명령어가 하나의 clock cycle 내에 처리되는 CPU 구조입니다.

**주 24** 답:
Superscalar CPU는 하나의 CPU에 여러 개의 실행 유닛을 포함하여, 한 사이클에 여러 개의 명령어를 동시에 실행할 수 있는 프로세서 구조입니다. 명령어 레벨 병렬성(ILP)을 활용하여 성능을 향상시킵니다.

**주 26** 답: -2
해설: 4비트 부호/크기 표현에서 1010은 최상위 비트 1이 음수를 나타내고, 나머지 010은 크기 2를 나타내므로 -2입니다.

**주 27** 답:
12비트 2의 보수 표현에서:
- 최소값: -2¹¹ = -2048
- 최대값: 2¹¹ - 1 = 2047
- 표현 범위: -2048 ≤ x ≤ 2047

**주 28** 답:
부호/크기 방식의 주요 문제점:
1. 0의 이중 표현 (+0, -0)
2. 덧셈/뺄셈 회로가 복잡함
3. 비교 연산이 복잡함

**주 29** 답:
12비트: 1111 1110 0100 (2의 보수로 -28)
① sign-extension: 0xFFFFFE4
② zero-extension: 0x00000FE4

**주 30** 답:
x10 = 0xFFFF1234
x11 = 0x0000FF00
x9 = x10 AND x11 = 0x00001200

**주 31** 답:
x10 = 00000000 00000000 00001101 11000000 = 0x00000DC0
x12 = 11111111 11111111 11111111 11111111 = 0xFFFFFFFF
x9 = x10 XOR x12 = 0xFFFFF23F

**주 32** 답:
XOR 논리 명령어의 유용성:
1. 데이터 암호화/복호화
2. 체크섬 계산
3. 비트 토글 (특정 비트 반전)
4. 레지스터 초기화 (자기 자신과 XOR)
5. 두 변수 값 교환 (추가 메모리 없이)

**주 33** 답:
XOR 연산을 이용하여 레지스터를 0으로 초기화하려면 같은 레지스터끼리 XOR 연산을 수행해야 합니다.
예: xor x1, x1, x1 → x1 = 0
조건: A XOR A = 0 (같은 값끼리 XOR하면 0이 됨)